// <auto-generated />
using System;
using Alta_Flight.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Alta_Flight.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.35")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Alta_Flight.Model.Account_Groups", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("accountID")
                        .HasColumnType("int");

                    b.Property<int?>("group_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("accountID");

                    b.HasIndex("group_id");

                    b.ToTable("Account_Group");
                });

            modelBuilder.Entity("Alta_Flight.Model.Accounts", b =>
                {
                    b.Property<int>("accountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("accountID"), 1L, 1);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("group_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("role_id")
                        .HasColumnType("int");

                    b.HasKey("accountID");

                    b.HasIndex("role_id");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("Alta_Flight.Model.Configurations", b =>
                {
                    b.Property<int>("configuration_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("configuration_ID"), 1L, 1);

                    b.Property<int>("Permission_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("creator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("document_Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("configuration_ID");

                    b.HasIndex("Permission_Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("Alta_Flight.Model.Document_Lists", b =>
                {
                    b.Property<int>("document_list_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("document_list_id"), 1L, 1);

                    b.Property<int>("Permission_Id")
                        .HasColumnType("int");

                    b.Property<int>("Update_Version_ID")
                        .HasColumnType("int");

                    b.Property<int>("accountID")
                        .HasColumnType("int");

                    b.Property<int>("configuration_ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("createDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("document_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("flight_ID")
                        .HasColumnType("int");

                    b.Property<float>("version")
                        .HasColumnType("real");

                    b.HasKey("document_list_id");

                    b.HasIndex("Permission_Id");

                    b.HasIndex("Update_Version_ID");

                    b.HasIndex("accountID");

                    b.HasIndex("configuration_ID");

                    b.ToTable("Document_List");
                });

            modelBuilder.Entity("Alta_Flight.Model.Flight_document_lists", b =>
                {
                    b.Property<int>("flight_document_lists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("flight_document_lists"), 1L, 1);

                    b.Property<int>("document_list_id")
                        .HasColumnType("int");

                    b.Property<int>("flight_ID")
                        .HasColumnType("int");

                    b.HasKey("flight_document_lists");

                    b.HasIndex("document_list_id");

                    b.HasIndex("flight_ID");

                    b.ToTable("flight_Document_List");
                });

            modelBuilder.Entity("Alta_Flight.Model.Flights", b =>
                {
                    b.Property<int>("flight_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("flight_ID"), 1L, 1);

                    b.Property<DateTime>("departure_date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("document_list_id")
                        .HasColumnType("int");

                    b.Property<string>("flight_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pound_of_loading")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("pound_of_unloading")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("flight_ID");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("Alta_Flight.Model.Groups", b =>
                {
                    b.Property<int>("group_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("group_id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Group_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Member")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("accountID")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("group_id");

                    b.ToTable("Group");
                });

            modelBuilder.Entity("Alta_Flight.Model.Permission", b =>
                {
                    b.Property<int>("Permission_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Permission_Id"), 1L, 1);

                    b.Property<string>("Permission_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("group_id")
                        .HasColumnType("int");

                    b.HasKey("Permission_Id");

                    b.HasIndex("group_id");

                    b.ToTable("Permission");
                });

            modelBuilder.Entity("Alta_Flight.Model.Roles", b =>
                {
                    b.Property<int>("role_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("role_id"), 1L, 1);

                    b.Property<string>("role_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("role_id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Alta_Flight.Model.UpdateVersions", b =>
                {
                    b.Property<int>("Update_Version_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Update_Version_ID"), 1L, 1);

                    b.Property<string>("Update_Version_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("accountID")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Update_Version_ID");

                    b.HasIndex("accountID");

                    b.ToTable("UpdateVersion");
                });

            modelBuilder.Entity("Alta_Flight.Model.Account_Groups", b =>
                {
                    b.HasOne("Alta_Flight.Model.Accounts", null)
                        .WithMany()
                        .HasForeignKey("accountID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Alta_Flight.Model.Groups", null)
                        .WithMany()
                        .HasForeignKey("group_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Alta_Flight.Model.Accounts", b =>
                {
                    b.HasOne("Alta_Flight.Model.Roles", null)
                        .WithMany()
                        .HasForeignKey("role_id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Alta_Flight.Model.Configurations", b =>
                {
                    b.HasOne("Alta_Flight.Model.Permission", null)
                        .WithMany()
                        .HasForeignKey("Permission_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Alta_Flight.Model.Document_Lists", b =>
                {
                    b.HasOne("Alta_Flight.Model.Permission", null)
                        .WithMany()
                        .HasForeignKey("Permission_Id")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Alta_Flight.Model.UpdateVersions", null)
                        .WithMany()
                        .HasForeignKey("Update_Version_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Alta_Flight.Model.Accounts", null)
                        .WithMany()
                        .HasForeignKey("accountID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Alta_Flight.Model.Configurations", null)
                        .WithMany()
                        .HasForeignKey("configuration_ID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Alta_Flight.Model.Flight_document_lists", b =>
                {
                    b.HasOne("Alta_Flight.Model.Document_Lists", null)
                        .WithMany()
                        .HasForeignKey("document_list_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Alta_Flight.Model.Flights", null)
                        .WithMany()
                        .HasForeignKey("flight_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Alta_Flight.Model.Permission", b =>
                {
                    b.HasOne("Alta_Flight.Model.Groups", null)
                        .WithMany()
                        .HasForeignKey("group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Alta_Flight.Model.UpdateVersions", b =>
                {
                    b.HasOne("Alta_Flight.Model.Accounts", null)
                        .WithMany()
                        .HasForeignKey("accountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
